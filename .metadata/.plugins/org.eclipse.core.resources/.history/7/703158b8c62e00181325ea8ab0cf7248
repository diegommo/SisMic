;-------------------------------------------------------------------------------
; MSP430 Assembler Code Template for use with TI Code Composer Studio
;
;
;-------------------------------------------------------------------------------
            .cdecls C,LIST,"msp430.h"       ; Include device header file
            
;-------------------------------------------------------------------------------
            .def    RESET                   ; Export program entry-point to
                                            ; make it known to linker.
;-------------------------------------------------------------------------------
            .text                           ; Assemble into program memory.
            .retain                         ; Override ELF conditional linking
                                            ; and retain current section.
            .retainrefs                     ; And retain any sections that have
                                            ; references to current section.

;-------------------------------------------------------------------------------
RESET       mov.w   #__STACK_END,SP         ; Initialize stackpointer
StopWDT     mov.w   #WDTPW|WDTHOLD,&WDTCTL  ; Stop watchdog timer


;-------------------------------------------------------------------------------
; Main loop here
;-------------------------------------------------------------------------------

INIT:
			mov.b	#vetor, R5
			call	#ORDENA
			jmp	$
			nop
ORDENA:
			mov.b	@R5, R8
			jmp	BOOTSTRAP

BOOTSTRAP:
			dec.b	R8								;Decrementa contador principal
			mov.b	@R8, R7							;Atribui contador auxiliar para primário

			mov.b	R5, R6							;Atribui ao endereço canditado, o endereço avaliado
LOOP:

			inc.b	R7								;Decrementa contador auxiliar
			jnz		COMPARE
			jmp		BOOTSTRAP

COMPARE:
			inc.b	R6								;Vai para a posição adjacente
			cmp		@R5, @R6						;Compara posição avalidada com posição candidata
			jge		COMPARE							;Se posição candidata não for menor que posição avadliada, nada acontece
			jmp		TROCA							;O conteúdo da posição avaliada recebe o conteúdo da posição candidata e vice cersa

TROCA:
			mov.b	@R6, R9
			mov.b	@R5, 0(R6)
			mov.b 	R9, 0(R5)

			jmp	LOOP






;-------------------------------------------------------------------------------
; Stack Pointer definition
;-------------------------------------------------------------------------------
            .global __STACK_END
            .sect   .stack
 			.data
vetor:		.byte	14, "DIEGOGUILHERME"
            
;-------------------------------------------------------------------------------
; Interrupt Vectors
;-------------------------------------------------------------------------------
            .sect   ".reset"                ; MSP430 RESET Vector
            .short  RESET
            
